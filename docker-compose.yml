version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: pg-db
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: stockdb
      POSTGRES_HOST_AUTH_METHOD: trust # <--- ADDED THIS LINE: Temporarily allows connections without password for local development
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d stockdb"]
      interval: 5s
      timeout: 5s
      retries: 5
    command: postgres -c 'max_connections=200'

  airflow_init:
    image: apache/airflow:2.7.2-python3.9
    container_name: airflow_init
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - AIRFLOW__CORE__EXECUTOR=SequentialExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/stockdb
    command: >
      bash -c "airflow db migrate && airflow users create --username admin --password admin --firstname Sakshi --lastname Shastri --role Admin --email admin@example.com"
    healthcheck:
      test: ["CMD-SHELL", "airflow db check"]
      interval: 10s
      timeout: 30s
      retries: 5

  airflow:
    image: apache/airflow:2.7.2-python3.9
    container_name: airflow
    restart: always
    depends_on:
      airflow_init:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    environment:
      - AIRFLOW__CORE__EXECUTOR=SequentialExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/stockdb
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./stock_data:/opt/airflow/data
    ports:
      - "8080:8080"
    command: >
      bash -c "pip install pandas psycopg2-binary sqlalchemy && airflow webserver & airflow scheduler"

  
volumes:
  pg_data:
